/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardUsersRouteImport } from './routes/dashboard/users'
import { Route as DashboardStatusPagesRouteImport } from './routes/dashboard/status-pages'
import { Route as DashboardMonitorsRouteImport } from './routes/dashboard/monitors'
import { Route as DashboardIntegrationsRouteImport } from './routes/dashboard/integrations'
import { Route as DashboardIncidentsRouteImport } from './routes/dashboard/incidents'
import { Route as DashboardLayoutRouteImport } from './routes/dashboard/_layout'
import { Route as AuthGoogleCallbackRouteImport } from './routes/auth.google.callback'

const DashboardRouteImport = createFileRoute('/dashboard')()

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardUsersRoute = DashboardUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardStatusPagesRoute = DashboardStatusPagesRouteImport.update({
  id: '/status-pages',
  path: '/status-pages',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMonitorsRoute = DashboardMonitorsRouteImport.update({
  id: '/monitors',
  path: '/monitors',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardIntegrationsRoute = DashboardIntegrationsRouteImport.update({
  id: '/integrations',
  path: '/integrations',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardIncidentsRoute = DashboardIncidentsRouteImport.update({
  id: '/incidents',
  path: '/incidents',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardLayoutRoute = DashboardLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthGoogleCallbackRoute = AuthGoogleCallbackRouteImport.update({
  id: '/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard': typeof DashboardLayoutRoute
  '/dashboard/incidents': typeof DashboardIncidentsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/monitors': typeof DashboardMonitorsRoute
  '/dashboard/status-pages': typeof DashboardStatusPagesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/incidents': typeof DashboardIncidentsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/monitors': typeof DashboardMonitorsRoute
  '/dashboard/status-pages': typeof DashboardStatusPagesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_layout': typeof DashboardLayoutRoute
  '/dashboard/incidents': typeof DashboardIncidentsRoute
  '/dashboard/integrations': typeof DashboardIntegrationsRoute
  '/dashboard/monitors': typeof DashboardMonitorsRoute
  '/dashboard/status-pages': typeof DashboardStatusPagesRoute
  '/dashboard/users': typeof DashboardUsersRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/dashboard/incidents'
    | '/dashboard/integrations'
    | '/dashboard/monitors'
    | '/dashboard/status-pages'
    | '/dashboard/users'
    | '/dashboard/'
    | '/auth/google/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/dashboard/incidents'
    | '/dashboard/integrations'
    | '/dashboard/monitors'
    | '/dashboard/status-pages'
    | '/dashboard/users'
    | '/auth/google/callback'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/dashboard/_layout'
    | '/dashboard/incidents'
    | '/dashboard/integrations'
    | '/dashboard/monitors'
    | '/dashboard/status-pages'
    | '/dashboard/users'
    | '/dashboard/'
    | '/auth/google/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthGoogleCallbackRoute: typeof AuthGoogleCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/status-pages': {
      id: '/dashboard/status-pages'
      path: '/status-pages'
      fullPath: '/dashboard/status-pages'
      preLoaderRoute: typeof DashboardStatusPagesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/monitors': {
      id: '/dashboard/monitors'
      path: '/monitors'
      fullPath: '/dashboard/monitors'
      preLoaderRoute: typeof DashboardMonitorsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/integrations': {
      id: '/dashboard/integrations'
      path: '/integrations'
      fullPath: '/dashboard/integrations'
      preLoaderRoute: typeof DashboardIntegrationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/incidents': {
      id: '/dashboard/incidents'
      path: '/incidents'
      fullPath: '/dashboard/incidents'
      preLoaderRoute: typeof DashboardIncidentsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/auth/google/callback': {
      id: '/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof AuthGoogleCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface DashboardRouteChildren {
  DashboardLayoutRoute: typeof DashboardLayoutRoute
  DashboardIncidentsRoute: typeof DashboardIncidentsRoute
  DashboardIntegrationsRoute: typeof DashboardIntegrationsRoute
  DashboardMonitorsRoute: typeof DashboardMonitorsRoute
  DashboardStatusPagesRoute: typeof DashboardStatusPagesRoute
  DashboardUsersRoute: typeof DashboardUsersRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardLayoutRoute: DashboardLayoutRoute,
  DashboardIncidentsRoute: DashboardIncidentsRoute,
  DashboardIntegrationsRoute: DashboardIntegrationsRoute,
  DashboardMonitorsRoute: DashboardMonitorsRoute,
  DashboardStatusPagesRoute: DashboardStatusPagesRoute,
  DashboardUsersRoute: DashboardUsersRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthGoogleCallbackRoute: AuthGoogleCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
